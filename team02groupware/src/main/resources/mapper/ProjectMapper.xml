<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team02.groupware.mapper.ProjectMapper">
	<!-- resultMap 을 효율적으로 사용하기 위함 -->
	
	<resultMap type="com.team02.groupware.dto.Project" id="projectResultMap">
		<result property="employeeCode" column="employee_code" />
		
		<result property="projectCode" column="project_code" />
		<result property="projectStatus" column="project_status" />
		<result property="projectAccess" column="project_access" />
		<result property="projectTitle" column="project_title" />
		<result property="projectDate" column="project_date" />
		<result property="projectDesc" column="project_desc" />
		<result property="projectDeadline" column="project_deadline" />
		<result property="projectStart" column="project_start" />
		<result property="projectEnd" column="project_end" />
		
		<result property="taskCode" column="task_code" />
		<result property="taskTitle" column="task_title" />
		<result property="taskDesc" column="task_desc" />
		<result property="taskDate" column="task_date" />
		<result property="taskDeadline" column="task_deadline" />
		<result property="taskStart" column="task_start" />
		<result property="taskEnd" column="task_end" />
		<result property="taskStatus" column="task_status" />
		
		<result property="tasklistCode" column="tasklist_code" />
		<result property="tasklistName" column="tasklist_name" />
	</resultMap>


	<delete id="tasklistDelete" parameterType = "String">
	DELETE
	FROM
		project_task_list
	WHERE
		tasklist_code=#{tasklistCode};
	</delete>
	
	
	<!-- 클론된 업무리스트코드 조회  -->
	<select id="selectTasklistcode" resultType="String">
	SELECT
		MAX(PTL.tasklist_code)
	FROM
		project_task_list AS PTL
	
	</select>

	<!-- 업무 추가 -->
	<insert id="taskInsert" parameterType="Project">
	<selectKey keyProperty="taskCode" resultType="String" order="BEFORE">
		SELECT
				CASE
					WHEN
						COUNT(1) > 1
				THEN
					CONCAT('PRT',
							LPAD(CAST(REPLACE(MAX(task_code), 'PRT', '') AS SIGNED ) + 1,3,'0')
			)
				ELSE
					ifnull (task_code, 'PRT001')
				END AS taskCode
			FROM
				project_task_detail
		</selectKey>
		INSERT INTO
			project_task_detail(
			task_code
			, project_code
			, tasklist_code
			, task_title
			, task_desc
			, task_date
			, task_deadline
			, task_start
			, task_end
			, task_status)
		VALUES(
			#{taskCode}
			, #{projectCode}
			, #{tasklistCode}
			, #{taskTitle}
			, #{taskDesc}
			, NOW()
			, #{taskDeadline}
			, #{taskStart}
			, #{taskEnd}
			, #{taskStatus})
	</insert>
	
	<!-- 업무 상세정보 조회 -->
	<select id="getTaskdetail" parameterType="String" resultMap="projectResultMap">
			SELECT
				TD.tasklist_code,
				TD.task_title,
				TD.task_code
			FROM
				project_task_detail AS TD
			WHERE
				TD.project_code=#{projectCode};
	
	</select>

	

	<!-- 업무리스트추가 -->
	<insert id="tasklistInsert" parameterType="Project">
	<selectKey keyProperty="tasklistCode" resultType="String" order="BEFORE">
			SELECT
				CASE
					WHEN
						COUNT(1) > 1
				THEN
					CONCAT('PRTL',
							LPAD(CAST(REPLACE(MAX(tasklist_code), 'PRTL', '') AS SIGNED ) + 1,3,'0')
			)
				ELSE
					ifnull (tasklist_code, 'PRTL001')
				END AS tasklistCode
			FROM
				project_task_list
		</selectKey>
		INSERT INTO
			project_task_list
			(tasklist_code
			,project_code
			,tasklist_name
			)
		VALUES (
			#{tasklistCode}
			,#{projectCode}
			,#{tasklistName}
		)
	</insert>
	

	<!-- 업무리스트 조회 -->
	<select id="selectTasklist" parameterType="String" resultMap="projectResultMap">
		
		SELECT
			PL.project_title
			,PL.project_code
			,TL.tasklist_name
			,TL.tasklist_code
		FROM
			project_task_list AS TL
			INNER JOIN
			project_list AS PL
		WHERE
			TL.project_code=PL.project_code
			AND 
			PL.project_code=#{projectCode};
	</select>

	<delete id="projectDelete" parameterType = "String">
	DELETE
	FROM
		project_list
	WHERE
		project_code=#{projectCode};
	
	</delete>
	

	<!-- 프로젝트 한개 상세정보 조회-->
	<select id="selectForProUpdate" parameterType="String" resultMap="projectResultMap">
	SELECT
		PL.*
	FROM
		project_list AS PL
	WHERE
		project_code = #{projectCode};
		
	</select>



	<!-- 프로젝트 추가  -->
	<insert id="projectInsert" parameterType="Project">
		<selectKey keyProperty="projectCode" resultType="String" order="BEFORE">
			SELECT
				CASE
					WHEN
						COUNT(1) > 1
				THEN
					CONCAT('PR',
							LPAD(CAST(REPLACE(MAX(project_code), 'PR', '') AS SIGNED ) + 1,3,'0')
			)
				ELSE
					ifnull (project_code, 'PR001')
				END AS projectCode
			FROM
				project_list
		</selectKey>
		INSERT INTO
			project_list
			(project_code
			,employee_code
			,project_title
			,project_date
			,project_status
			,project_access
			,project_desc
			,project_deadline
			,project_start
			,project_end
			)
		VALUES(
			#{projectCode}
			,#{employeeCode}
			,#{projectTitle}
			,now()
			,#{projectStatus}
			,#{projectAccess}
			,#{projectDesc}
			,#{projectDeadline}
			,#{projectStart}
			,#{projectEnd}
			)
	</insert>

	<!-- 게시판 리스트 조회 -->
	<select id="getProjectRowCount" resultType="int">
		SELECT
			COUNT(1)
		FROM
			project_list

	</select>
	
	<!--parametertype= "java.util.Map" -->
	<select id="getProjectlist" parameterType="map" resultType="Project">
		SELECT
			project_code AS projectCode
			,employee_code AS employeeCode
			,project_title AS projectTitle
			,project_date AS projectDate
			,project_desc AS projectDesc
			,project_access AS projectAccess
			,project_status AS projectStatus
			,project_start AS projectStart
			,project_deadline AS projectDeadline
			,project_end AS projectEnd
		FROM
			project_list
		ORDER BY
			projectDate DESC
		<if test="list == 'list'">
			LIMIT #{startRow}, #{rowPerPage};
		</if>
	</select>
</mapper>